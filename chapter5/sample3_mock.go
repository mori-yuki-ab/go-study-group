// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/apbgo/go-study-group/chapter5 (interfaces: IFDBService2)

// Package chapter5 is a generated GoMock package.
package chapter5

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIFDBService2 is a mock of IFDBService2 interface
type MockIFDBService2 struct {
	ctrl     *gomock.Controller
	recorder *MockIFDBService2MockRecorder
}

// MockIFDBService2MockRecorder is the mock recorder for MockIFDBService2
type MockIFDBService2MockRecorder struct {
	mock *MockIFDBService2
}

// NewMockIFDBService2 creates a new mock instance
func NewMockIFDBService2(ctrl *gomock.Controller) *MockIFDBService2 {
	mock := &MockIFDBService2{ctrl: ctrl}
	mock.recorder = &MockIFDBService2MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIFDBService2) EXPECT() *MockIFDBService2MockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockIFDBService2) Get(arg0 int) UserData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(UserData)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockIFDBService2MockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIFDBService2)(nil).Get), arg0)
}
